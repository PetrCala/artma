name: Submit to CRAN

on:
  workflow_dispatch:
    inputs:
      PACKAGE_VERSION:
        description: The version of the package to be submitted to CRAN
        required: true
        type: string

jobs:
  validateActor:
    runs-on: ubuntu-latest
    outputs:
      CAN_SUBMIT_TO_CRAN: ${{ contains(fromJSON('["admin"]'), steps.getUserPermissions.outputs.PERMISSION) }}
    steps:
      - name: Get user permissions
        id: getUserPermissions
        run: echo "PERMISSION=$(gh api /repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission | jq -r '.permission')" >> "$GITHUB_OUTPUT"
        env:
            GH_TOKEN: ${{ github.token }}

  submitToCran:
    runs-on: ubuntu-latest
    needs: validateActor
    if: ${{ needs.validateActor.outputs.CAN_SUBMIT_TO_CRAN == 'true' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::devtools, any::curl, local::.

      - name: Install local development dependencies
        run: |
          ./run.sh setup --no-box-check

      - name: Construct package local file name
        id: constructPackageName
        run: |
          echo "PKG_FILE_NAME=artma_${{ inputs.PACKAGE_VERSION }}.tar.gz" >> "$GITHUB_OUTPUT"

      - name: Get release asset URL
        id: getReleaseUrl
        run: |
          TAG="v${{ inputs.PACKAGE_VERSION }}"
          REPO="${{ github.repository }}"

          ASSET_INFO=$(curl -s "https://api.github.com/repos/${REPO}/releases/tags/${TAG}")
              
          echo "$ASSET_INFO" | jq -r '.assets[] | "\(.name)=\(.browser_download_url)"' > assets.txt

          cat assets.txt

          echo "ASSET_LIST=$(cat assets.txt | jq -Rs .)" >> "$GITHUB_OUTPUT"

      - name: Download all release assets
        run: |
          while IFS='=' read -r name url; do
            echo "Downloading $name"
            curl -L -o "$name" "$url"
          done < assets.txt

      - name: Submit to CRAN
        run: |
          source("./scripts/R/release.R")
          built_path <- "${{ steps.constructPackageName.outputs.PKG_FILE_NAME }}"
          print(paste("Submitting package:", built_path))
          submit_cran(pkg = ".", built_path = built_path, args = NULL)
        shell: Rscript {0}
