name: Build & Create Tag

on:
  pull_request:
    branches: 
      - release
    types: [closed]

jobs:
  preBuild:
    runs-on: macos-latest
    if: ${{ github.event.pull_request.merged == true }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: release
          token: ${{ secrets.ARTMA_BOT_COMMIT_TOKEN }}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::remotes, any::devtools, local::.

      - name: Setup git for ArtmaBot
        uses: ./.github/actions/composite/setupGitForArtmaBot
        id: setupGitForArtmaBot
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

  createNewVersion:
    needs: [preBuild]
    uses: ./.github/workflows/create-new-version.yaml

  build:
    runs-on: macos-latest
    needs: [createNewVersion]
    steps:
      - name: Run R CMD check
        run: |
          Rscript -e 'devtools::check()'

      - name: Build the .tar.gz
        run: |
          Rscript -e 'devtools::build()'

  postBuild:
    runs-on: macos-latest
    needs: [build, createNewVersion]
    steps:
      - name: Determine new version and create tag
        id: createTag
        run: |
          TAG_NAME="v${{ needs.createNewVersion.outputs.NEW_VERSION }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Push tag to GitHub
        run: |
          git tag ${{ steps.createTag.outputs.TAG_NAME }}
          git push origin ${{ steps.createTag.outputs.TAG_NAME }}
