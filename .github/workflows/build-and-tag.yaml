name: Build & Create Tag

on:
  pull_request:
    branches:
      - master
    types: [closed]

  workflow_dispatch:
    inputs:
      SEMVER_LEVEL:
        description: 'Semver level to bump (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  labelChecks:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    outputs:
      readyToBuild: ${{ steps.labelCheck.outputs.readyToBuild }}
      semver: ${{ steps.labelCheck.outputs.semver }}

    steps:
      - name: Determine labels from PR
        id: labelCheck
        run: |
          label_names='${{ toJson(github.event.pull_request.labels) }}'

          readyToBuild="false"

          if echo "$label_names" | jq -e '.[] | select(.name == "release:next-version")' >/dev/null; then
            readyToBuild="true"
          fi

          semver_labels=$(echo "$label_names" | jq -r '[.[] | select(.name | startswith("v-")) | .name]')

          label_count=$(echo "$semver_labels" | jq 'length')

          semver="patch"
          if ((label_count > 1)); then
            echo "Error: more than one label starting with 'v-' found." >&2
            exit 1
          elif ((label_count == 1)); then
            semver=$(echo "$semver_labels" | jq -r '.[0]' | sed 's/^v-//')
            echo "Assigned semver: $semver"
          fi

          echo "readyToBuild=$readyToBuild" >> "$GITHUB_OUTPUT"
          echo "semver=$semver" >> "$GITHUB_OUTPUT"
        shell: bash

  build:
    runs-on: ubuntu-latest
    needs: [labelChecks]
    if: ${{ needs.labelChecks.outputs.readyToBuild == 'true' && github.event.pull_request.merged == true }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::remotes, any::devtools, local::.

        # Bump the version locally for the build to run correctly
      - name: Generate version
        id: bumpVersion 
        uses: ./.github/actions/composite/bumpVersion
        with:
          SEMVER_LEVEL: ${{ needs.labelChecks.outputs.semver }}

      - name: Build the .tar.gz
        run: |
          Rscript -e 'devtools::build(path = ".", binary = TRUE, vignettes = TRUE, manual = FALSE)'

      - name: Upload R package artifact
        uses: actions/upload-artifact@v3
        with:
          name: r-package
          path: ./*.tar.gz

  # createNewVersion:
  #   needs: [build]
  #   uses: ./.github/workflows/create-new-version.yaml
  #   with:
  #     SEMVER_LEVEL: ${{ needs.labelChecks.outputs.semver }}
  #   secrets: inherit

  # postBuild:
  #   runs-on: macos-latest
  #   needs: [createNewVersion]
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Setup git for ArtmaBot
  #       uses: ./.github/actions/composite/setupGitForArtmaBot
  #       id: setupGitForArtmaBot
  #       with:
  #         GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

  #     - name: Determine new version and create tag
  #       id: createTag
  #       run: |
  #         TAG_NAME="v${{ needs.createNewVersion.outputs.NEW_VERSION }}"
  #         echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

  #     - name: Push tag to GitHub
  #       run: |
  #         git fetch --tags
  #         git tag ${{ steps.createTag.outputs.TAG_NAME }}
  #         git push origin ${{ steps.createTag.outputs.TAG_NAME }}

  #     - name: Download built package
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: r-package

  #     - name: Upload release asset
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         tag_name: ${{ steps.createTag.outputs.TAG_NAME }}
  #         files: ./*.tar.gz